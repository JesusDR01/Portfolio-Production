{"version":3,"sources":["helpers/i18n.tsx","components/Media/Media.styled.tsx","components/Media/Media.tsx","components/Footer/Footer.styled.tsx","components/Footer/Footer.tsx","components/Skills/Skills.styled.tsx","components/MainSkills/MainSkills.styled.tsx","components/MainSkills/MainSkills.tsx","components/SecondarySkills/SecondarySkills.styled.tsx","components/SecondarySkills/SecondarySkills.tsx","components/SoftSkills/SoftSkills.styled.tsx","components/SoftSkills/SoftSkills.tsx","components/Skills/Skills.tsx","components/Projects/Projects.styled.tsx","components/Projects/Projects.tsx","components/Portfolio/Portfolio.styled.tsx","components/Portfolio/Portfolio.tsx","components/LanguageToggler/LanguageToggler.styled.tsx","components/LanguageToggler/LanguageToggler.tsx","components/Navbar/Navbar.styled.tsx","components/Navbar/Navbar.tsx","App.styled.tsx","components/About/About.styled.tsx","components/About/About.tsx","components/FrontPage/FrontPage.styled.tsx","components/FrontPage/FrontPage.tsx","themes.tsx","App.tsx","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","react","useSuspense","returnObjects","interpolation","escapeValue","backend","loadPath","window","location","pathname","MediaWrapper","styled","ul","Media","data","map","media","idx","target","rel","href","url","src","img","alt","name","width","height","FooterWrapper","div","Footer","t","useTranslation","className","SkillsWrapper","section","MainSkillsWrapper","article","MainSkills","skill","SecondarySkillsWrapper","SwiperCore","Autoplay","Pagination","Navigation","swiperSlides","SecondarySkills","id","autoplay","delay","disableOnInteraction","navigation","loop","slidesPerView","slidesPerColumn","slidesPerColumnFill","centeredSlides","pagination","clickable","getSlides","forEach","push","SoftSkillsWrapper","SoftSkills","skills","Array","from","Skills","ProjectsWrapper","expand","Scrollbar","Keyboard","Projects","expandState","useState","keyboard","enabled","undefined","autoHeight","breakpoints","setExpand","project","onClick","repo","web","PortfolioWrapper","Portfolio","LanguageTogglerWrapper","LanguageToggler","changeLanguage","lng","NavbarWrapper","nav","showOnScroll","show","Navbar","setTheme","expandNav","setExpandNav","liList","content","toggle","setShowOnScroll","useEffect","lastScroll","controlNavbar","scrollY","addEventListener","removeEventListener","icon","faMoon","theme","faSun","faBars","li","AppWrapper","AboutWrapper","About","FrontPageWrapper","FrontPage","lightTheme","body","fontColor","switchWrapperColor","switchBallColor","switchTranslate","darkTheme","GlobalStyles","createGlobalStyle","App","showNav","setShowNav","onSlideChange","e","isEnd","mainArrowPrev","document","querySelector","style","display","mainArrowNext","grabCursor","ReactDOM","render","StrictMode","path","exact","component","getElementById"],"mappings":"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","file":"static/js/main.08b02dad.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        fallbackLng: \"en\",\r\n        debug: false,\r\n        react: {\r\n            useSuspense: false, //   <---- this will do the magic\r\n        },\r\n        returnObjects: true,\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        backend: {\r\n            loadPath: `${window.location.pathname}/locales/{{lng}}/{{ns}}.json`,\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MediaWrapper = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n`;\r\n","import { MediaWrapper } from \"./Media.styled\";\r\nimport * as data from \"src/models/data.json\";\r\n\r\nconst Media = () => (\r\n    <MediaWrapper>\r\n        {data.media.map((media, idx) => (\r\n            <li key={idx}>\r\n                <a target=\"_blank\" rel=\"noreferrer noopener\" href={media.url}>\r\n                    <img src={media.img} alt={media.name} width=\"80\" height=\"80\" />\r\n                </a>\r\n            </li>\r\n        ))}\r\n    </MediaWrapper>\r\n);\r\n\r\nexport default Media;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterWrapper = styled.div`\r\n    padding: 24px;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    flex-direction: column;\r\n    margin-top: 150px;\r\n    &,\r\n    .information {\r\n        display: flex;\r\n        flex-flow: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .information {\r\n        width: 100%;\r\n    }\r\n\r\n    span {\r\n        color: #79b8f3;\r\n        :not(.credits) {\r\n            cursor: pointer;\r\n        }\r\n        &.credits {\r\n            color: #8197a4;\r\n            margin-top: 10px;\r\n        }\r\n    }\r\n\r\n    div {\r\n        margin-top: 10px;\r\n        width: 70%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    ul {\r\n        margin-left: 0%;\r\n        padding-left: 0;\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n        padding-left: 0;\r\n        margin-right: 25px;\r\n        .information {\r\n            flex-flow: row;\r\n            justify-content: space-evenly;\r\n            margin-top: 0;\r\n            div {\r\n                margin-top: 0;\r\n                width: unset;\r\n                justify-content: space-between;\r\n                width: 200px;\r\n            }\r\n        }\r\n        ul {\r\n            margin-left: 45px;\r\n        }\r\n        span {\r\n            &.credits {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import Media from \"../Media/Media\";\r\nimport { FooterWrapper } from \"./Footer.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Footer = () => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <FooterWrapper>\r\n            <Media />\r\n            <div className=\"information\">\r\n                <span>{t(\"footer.terms\")}</span>\r\n                <div>\r\n                    <span>{t(\"footer.comments\")}</span>\r\n                    <span>{t(\"footer.help\")}</span>\r\n                </div>\r\n                <span className=\"credits\">©2022 Jesús Diaz Rivas</span>\r\n            </div>\r\n        </FooterWrapper>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SkillsWrapper = styled.section`\r\n    @media (min-width: 992px) {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainSkillsWrapper = styled.article`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex: 0.5;\r\n\r\n    img {\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n        height: auto;\r\n    }\r\n    @media (min-width: 992px) {\r\n        flex: 1;\r\n        img {\r\n            width: 64%;\r\n        }\r\n    }\r\n`;\r\n","import { MainSkillsWrapper } from \"./MainSkills.styled\";\r\nimport * as data from \"src/models/data.json\";\r\nimport { useTranslation } from \"react-i18next\";\r\nexport const MainSkills = () => {\r\nconst { t } = useTranslation();\r\n\r\n    return (\r\n        <MainSkillsWrapper>\r\n            <h2>{t(\"sections.skills.articles.main.title\")}</h2>\r\n            {data.primarySkills.map((skill, idx) => {\r\n                return <img key={idx} src={skill.img} alt={skill.name} width=\"250\" height=\"250\"/>;\r\n            })}\r\n        </MainSkillsWrapper>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SecondarySkillsWrapper = styled.article`\r\n    .swiper-wrapper {\r\n        align-items: center;\r\n    }\r\n    img{\r\n        width: 100%;\r\n        height: auto;\r\n    }\r\n    @media (min-width: 992px) {\r\n        width: 30%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        .swiper-wrapper {\r\n            img {\r\n                width: 57%;\r\n            }\r\n        }\r\n        .swiper-container {\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\n","import SwiperCore, { Autoplay, Pagination, Navigation } from \"swiper/core\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { SwiperDataSkill } from \"src/models/SwiperDataSkill\";\r\nimport * as data from \"src/models/data.json\";\r\nimport { SecondarySkillsWrapper } from \"./SecondarySkills.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\nSwiperCore.use([Autoplay, Pagination, Navigation]);\r\n\r\nlet swiperSlides: SwiperDataSkill[] = data.secondarySkills;\r\n\r\nexport const SecondarySkills = () => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <SecondarySkillsWrapper id=\"secondary-skills\">\r\n            <h2>{t(\"sections.skills.articles.secondary.title\")}</h2>\r\n            <Swiper\r\n                autoplay={{\r\n                    delay: 1500,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                navigation={true}\r\n                loop={false}\r\n                slidesPerView={1}\r\n                slidesPerColumn={2}\r\n                slidesPerColumnFill={\"row\"}\r\n                centeredSlides={true}\r\n                pagination={{\r\n                    clickable: true,\r\n                }}\r\n            >\r\n                {getSlides(swiperSlides)}\r\n            </Swiper>\r\n        </SecondarySkillsWrapper>\r\n    );\r\n};\r\n\r\nfunction getSlides(data: SwiperDataSkill[] | undefined) {\r\n    let swiperSlides: JSX.Element[] = [];\r\n    if (data) {\r\n        data.forEach((skill, idx) => {\r\n            swiperSlides.push(\r\n                <SwiperSlide key={idx}>{<img alt={skill.name} src={skill.img} height=\"250\" width=\"250\"/>}</SwiperSlide>\r\n            );\r\n        });\r\n        return swiperSlides;\r\n    }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const SoftSkillsWrapper = styled.article`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    p{\r\n        margin:13px;\r\n    }\r\n`;\r\n","import { SoftSkillsWrapper } from \"./SoftSkills.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\nexport const SoftSkills = () => {\r\n    const { t } = useTranslation();\r\n    const skills:string[] = Array.from(t(\"sections.skills.articles.soft.content\"));\r\n    return (\r\n        <SoftSkillsWrapper>\r\n            <h2>{t(\"sections.skills.articles.soft.title\")}</h2>\r\n            {skills.map((skill, idx) => (\r\n                <p key={idx}>{skill}</p>\r\n            ))}\r\n               {\r\n                <p>{}</p>\r\n            }\r\n        </SoftSkillsWrapper>\r\n    );\r\n};\r\n","import { SkillsWrapper } from \"./Skills.styled\";\r\nimport { MainSkills } from \"../MainSkills/MainSkills\";\r\nimport { SecondarySkills } from \"../SecondarySkills/SecondarySkills\";\r\nimport { SoftSkills } from \"../SoftSkills/SoftSkills\";\r\n\r\nconst Skills: React.FC = () => {\r\n    \r\n    return (\r\n        <SkillsWrapper>\r\n            <MainSkills />\r\n            <SecondarySkills />\r\n            <SoftSkills />\r\n        </SkillsWrapper>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import styled from \"styled-components\";\r\n\r\ntype ProjectsProps = {\r\n    expand: boolean;\r\n};\r\nlet width = 48;\r\nexport const ProjectsWrapper = styled.section<ProjectsProps>`\r\n    .swiper-wrapper {\r\n        height: auto !important;\r\n        align-items: center;\r\n        img {\r\n            width: 69%;\r\n            height: auto;\r\n        }\r\n        .arrow-expand {\r\n            transition: all 0.5s;\r\n            width: 40px;\r\n            position: absolute;\r\n            height: 40px;\r\n            right: 15.5%;\r\n            filter: invert(40%) sepia(47%) saturate(2646%) hue-rotate(166deg) brightness(101%)\r\n                contrast(101%);\r\n            background: #2745148f;\r\n            border-radius: 17%;\r\n            border: 2px solid white;\r\n            transform: ${({ expand }) => (expand ? \"rotate(180deg)\" : \"initial\")};\r\n            bottom: ${({ expand }) => (expand ? \"0.1%\" : \"initial\")};\r\n            left: ${({ expand }) => (expand ? \"15.5%\" : \"initial\")};\r\n            z-index: 1;\r\n        }\r\n    }\r\n    .swiperSlide {\r\n        display: flex;\r\n        padding: 10px;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .project-info {\r\n        overflow-y: auto;\r\n        transition: all 0.5s;\r\n        opacity: ${({ expand }) => (expand ? \"1\" : \"0\")};\r\n        width: 69%;\r\n        position: absolute;\r\n        top: 0;\r\n        font-size: 14px;\r\n        right: 15.5%;\r\n        flex-direction: column-reverse;\r\n        height: 100%;\r\n        background: #0f1520ab;\r\n        color: white;\r\n        justify-content: flex-end;\r\n\r\n        a {\r\n            color: #79b8f3;\r\n        }\r\n        p {\r\n            background-color: initial;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n        .swiper-wrapper {\r\n            height: auto !important;\r\n            align-items: center;\r\n            img {\r\n                width: ${width}%;\r\n            }\r\n            .arrow-expand {\r\n                right: 26%;\r\n                left: ${({ expand }) => (expand ? `26%` : \"initial\")};\r\n                bottom: ${({ expand }) => (expand ? \"2.5%\" : \"initial\")};\r\n            }\r\n        }\r\n        .project-info {\r\n            width: 48%;\r\n            right: 26%;\r\n            height: 97.7%;\r\n            p {\r\n                font-size: 1.1rem;\r\n                margin: 10px;\r\n            }\r\n            a {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Keyboard, Autoplay, Pagination, Navigation, Scrollbar } from \"swiper/core\";\r\nimport { SwiperDataProject } from \"src/models/SwiperDataProject\";\r\nimport { ProjectsWrapper } from \"./Projects.styled\";\r\nimport * as data from \"src/models/data.json\";\r\n\r\nimport { useTranslation, TFunction } from \"react-i18next\";\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar, Keyboard]);\r\nlet swiperSlides: SwiperDataProject[] = data.projects;\r\n\r\nconst Projects: React.FC = () => {\r\n    const { t } = useTranslation();\r\n    const expandState = useState(false);\r\n    return (\r\n        <ProjectsWrapper expand={expandState[0]}>\r\n            <Swiper\r\n                keyboard={{\r\n                    enabled: true,\r\n                }}\r\n                centeredSlides={true}\r\n                loop={true}\r\n                navigation={true}\r\n                slidesPerColumnFill={0 ? \"row\" : undefined}\r\n                autoHeight={true}\r\n                pagination={{\r\n                    clickable: true,\r\n                }}\r\n                breakpoints={{\r\n                    768: {\r\n                        slidesPerView: 1,\r\n                    },\r\n                    992: {\r\n                        slidesPerView: 1,\r\n                    },\r\n                    1200: {\r\n                        slidesPerView: 2,\r\n                    },\r\n                }}\r\n            >\r\n                {getSlides(swiperSlides, expandState, t)}\r\n            </Swiper>\r\n        </ProjectsWrapper>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n\r\nfunction getSlides(\r\n    data: SwiperDataProject[] | undefined,\r\n    expandState: [boolean, React.Dispatch<React.SetStateAction<boolean>>],\r\n    t: TFunction<\"translation\", undefined>\r\n) {\r\n    const [expand, setExpand] = expandState;\r\n    let swiperSlides: JSX.Element[] = [];\r\n    if (data) {\r\n        data.forEach((project, idx) => {\r\n            swiperSlides.push(\r\n                <SwiperSlide key={idx}>\r\n                    {<img alt={project.name} src={project.img} width=\"350\" height=\"400\" />}\r\n                    <img\r\n                        width=\"44\"\r\n                        height=\"44\"\r\n                        className=\"arrow-expand\"\r\n                        src=\"assets/svg/arrowExpand.svg\"\r\n                        alt=\"arrowExpand\"\r\n                        onClick={() => setExpand(!expand)}\r\n                    />\r\n                    <div className=\"project-info\">\r\n                        <div className=\"project-title\">\r\n                            <p>{project.name}</p>\r\n                        </div>\r\n                        <div className=\"project-description\">\r\n                            <p>{t(\"sections.projects.descriptions\")[idx]}</p>\r\n                        </div>\r\n                        <p>\r\n                            <a href={project.repo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {t(\"sections.projects.repository\")}\r\n                            </a>\r\n                        </p>\r\n                        {project.web && (\r\n                            <p>\r\n                                <a href={project.web} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    Web\r\n                                </a>\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </SwiperSlide>\r\n            );\r\n        });\r\n        return swiperSlides;\r\n    }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const PortfolioWrapper = styled.div`\r\n    cursor:initial;\r\n    text-align: center;\r\n\r\n    background-color: #0f171e;\r\n    min-height: 100vh;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n    padding: 35px;\r\n    .categories {\r\n        width: 100%;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    .d-none {\r\n        display: none;\r\n    }\r\n\r\n  \r\n\r\n    #about, #skills, #projects {\r\n        padding-top: 125px;\r\n        margin-top: 0;\r\n    }\r\n`;\r\n","import Footer from \"../Footer/Footer\";\r\nimport Skills from \"../Skills/Skills\";\r\nimport Projects from \"../Projects/Projects\";\r\nimport { PortfolioWrapper } from \"./Portfolio.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\nexport const Portfolio = () => {\r\nconst { t } = useTranslation();\r\n\r\n    return (\r\n        <PortfolioWrapper id=\"portfolio\">\r\n            <h2 id=\"skills\">{t(\"sections.skills.title\")}</h2>\r\n            <Skills />\r\n            <h2 id=\"projects\">{t(\"sections.projects.title\")}</h2>\r\n            <Projects />\r\n            <Footer />\r\n        </PortfolioWrapper>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ntype LanguageTogglerProps = {\r\n    show?: boolean;\r\n};\r\n\r\nexport const LanguageTogglerWrapper = styled.div<LanguageTogglerProps>`\r\n    display: flex;\r\n    flex: 0.5;\r\n    caret-color: transparent;\r\n    button {\r\n        background: transparent;\r\n        border: none;\r\n        flex: 0.5;\r\n\r\n        img {\r\n            width: 100%;\r\n            height: auto;\r\n        }\r\n    }\r\n    @media (min-width: 564px) {\r\n        flex: 0.2;\r\n    }\r\n`;\r\n","import { LanguageTogglerWrapper } from \"./LanguageToggler.styled\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const LanguageToggler = () => {\r\n    const {i18n} = useTranslation();\r\n    const changeLanguage = (lng:string) => {\r\n      i18n.changeLanguage(lng);\r\n    };\r\n\r\n    return (\r\n        <LanguageTogglerWrapper>\r\n            <button onClick={() => changeLanguage('en')}>\r\n                <img width=\"60\" height=\"60\" alt=\"UK flag\" src=\"assets/svg/countries/united-kingdom.svg\" />\r\n            </button>\r\n            <button>\r\n                <img width=\"60\" height=\"60\" onClick={() => changeLanguage('es-ES')} alt=\"Spain flag\" src=\"assets/svg/countries/spain.svg\" />\r\n            </button>\r\n        </LanguageTogglerWrapper>\r\n    );\r\n};\r\n\r\nexport default LanguageToggler;\r\n","import styled from \"styled-components\";\r\n\r\ntype NavbarProps = {\r\n    show: boolean;\r\n    showOnScroll: boolean;\r\n    expand: boolean;\r\n};\r\n\r\nexport const NavbarWrapper = styled.nav<NavbarProps>`\r\n\r\n    opacity: ${({ showOnScroll }) => (showOnScroll ? 1 : 0)};\r\n    position: fixed;\r\n    display: flex;\r\n    padding: 35px 45px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    z-index: 2;\r\n    flex-direction: column;\r\n    transition: opacity 0.3s, height 0.3s;\r\n    #nav-toggle {\r\n        display: ${({ show }) => (show ? \"flex\" : \"none\")};\r\n    }\r\n    #navActions {\r\n        justify-content: space-between;\r\n        display: ${({ showOnScroll, show }) => (showOnScroll || !show ? \"flex\" : \"none\")};\r\n    }\r\n    #extraBtnsWrapper {\r\n        display: flex;\r\n    }\r\n\r\n    #nav-toggle {\r\n        color: #01b2ff;\r\n        background: none;\r\n        align-self: center;\r\n        border: none;\r\n        font-size: 30px;\r\n        padding: 0 20px;\r\n        cursor: pointer;\r\n        caret-color: transparent;\r\n    }\r\n\r\n    ul {\r\n        display: ${({ show }) => (show  ? \"flex\" : \"none\")};\r\n        height: ${({ show, expand }) => (show && expand ? \"100vh\" : \"0vh\")};\r\n        transition: all 0.3s;\r\n        transform: translateX(${({ show, expand }) => (show && expand ? \"0%\" : \"200%\")});\r\n        padding-left: 0px;\r\n        list-style-type: none;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        a {\r\n            display: ${({ showOnScroll }) => (showOnScroll ? \"flex\" : \"none\")};\r\n            text-decoration: none;\r\n        }\r\n        li {\r\n            display: flex;\r\n            cursor: pointer;\r\n            font-weight: 700;\r\n            margin: 7px;\r\n\r\n            &:hover {\r\n                color: #79b8f3;\r\n            }\r\n        }\r\n    }\r\n    #switch-wrapper {\r\n        flex:0.8;\r\n        margin: 10px;\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n\r\n        #theme-switch {\r\n            width: 70px;\r\n            height: 30px;\r\n            border-radius: 50px;\r\n            position: relative;\r\n\r\n            #ball {\r\n                caret-color: transparent;\r\n                width: 24px;\r\n                height: 24px;\r\n                border-radius: 100%;\r\n                position: absolute;\r\n                top: 1px;\r\n                left: 4px;\r\n                transition: 0.5s all ease;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        height: initial;\r\n        #nav-toggle {\r\n            display: none;\r\n        }\r\n        ul {\r\n            display: ${({ show }) => (show ? \"flex\" : \"none\")};\r\n            flex-direction: row;\r\n            justify-content: flex-end;\r\n            margin: 0;\r\n            transform: translateX(${({ show }) => (show ? \"0%\" : \"200%\")});\r\n            height: initial;\r\n        }\r\n    }\r\n`;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport LanguageToggler from \"../LanguageToggler/LanguageToggler\";\r\nimport { NavbarWrapper } from \"./Navbar.styled\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon, faSun, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const Navbar = ({\r\n    show = false,\r\n    setTheme,\r\n}: {\r\n    show: boolean;\r\n    setTheme: Dispatch<SetStateAction<string>>;\r\n}) => {\r\n    const { t } = useTranslation();\r\n    const [expandNav, setExpandNav] = useState(false);\r\n    const liList = [\r\n        { content: t(\"sections.skills.title\"), href: \"#root\" },\r\n        { content:  t(\"sections.projects.title\"), href: \"#projects\" },\r\n    ];\r\n    const toggle = () => {\r\n        setExpandNav(!expandNav);\r\n    };\r\n\r\n    const [showOnScroll, setShowOnScroll] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let lastScroll = 0;\r\n        const controlNavbar = () => {\r\n            if (window.scrollY >= lastScroll) {\r\n                setShowOnScroll(false);\r\n            } else {\r\n                setShowOnScroll(true);\r\n            }\r\n            if (window.scrollY === 0) {\r\n                setShowOnScroll(true);\r\n            }\r\n            lastScroll = window.scrollY;            \r\n        };\r\n        window.addEventListener(\"scroll\", controlNavbar);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", controlNavbar);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <NavbarWrapper show={show && showOnScroll} showOnScroll={showOnScroll} expand={expandNav}>\r\n            <div id=\"navActions\">\r\n                <div id=\"extraBtnsWrapper\">\r\n                    <LanguageToggler />\r\n                    <div id=\"switch-wrapper\">\r\n                        <FontAwesomeIcon icon={faMoon} />\r\n                        <button\r\n                            id=\"theme-switch\"\r\n                            aria-label=\"Switch dark/light theme\"\r\n                            onClick={() =>\r\n                                setTheme((theme) => (theme === \"light\" ? \"dark\" : \"light\"))\r\n                            }\r\n                        >\r\n                            <div id=\"ball\"></div>\r\n                        </button>\r\n                        <FontAwesomeIcon icon={faSun} />\r\n                    </div>\r\n                </div>\r\n                <button id=\"nav-toggle\" aria-label=\"Show menu\" onClick={toggle}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {liList.map((li, idx) => (\r\n                    <a key={idx} href={li.href}>\r\n                        <li onClick={toggle}>{li.content}</li>\r\n                    </a>\r\n                ))}\r\n            </ul>\r\n        </NavbarWrapper>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n    .front-component {\r\n        height: 100vh;\r\n    }\r\n    .mainSwiper > .swiper-button-next,\r\n    .mainSwiper > .swiper-button-prev {\r\n        font-weight: bolder;\r\n    }\r\n\r\n    .mainSwiper > .swiper-button-prev {\r\n        display: none;\r\n        position: fixed !important;\r\n    }\r\n\r\n    font-family: ember, Arial, sans-serif !important;\r\n    @font-face {\r\n        font-family: \"ember\";\r\n        src: local(\"ember\"), url(\"../../assets/fonts/ember.ttf\") format(\"opentype\");\r\n        font-display: swap;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    width: 66%;\r\n    \r\n    p {\r\n        text-align: justify;\r\n        margin-left: 10px;\r\n    }\r\n    img {\r\n        width: 80%;\r\n        border: 3px solid #c2e4ff;\r\n        border-radius: 20%;\r\n        height: auto;\r\n    }\r\n\r\n    @media (min-width: 524px) {\r\n        img {\r\n            max-width: 45%;\r\n        }\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n        p {\r\n            font-size: 1.5rem;\r\n            max-width: 55%;\r\n        }\r\n        img {\r\n            max-width: 35%;\r\n        }\r\n    }\r\n\r\n    @media (min-width: 1650px) {\r\n        p {\r\n            font-size: 1.7rem;\r\n            width: 55%;\r\n        }\r\n        img {\r\n            width: 25%;\r\n        }\r\n    }\r\n`;\r\n","import { AboutWrapper } from \"./About.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const About = () => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <AboutWrapper>\r\n            <img id=\"my-img\" alt=\"My face\" src=\"assets/img/me.webp\" width=\"640\" height=\"360\" />\r\n            <p>\r\n                {t('about')}\r\n            </p>\r\n        </AboutWrapper>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FrontPageWrapper = styled.div`\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    list-style-type: none;\r\n    height: 100vh;\r\n    padding: 20px;\r\n    \r\n`;\r\n","import { About } from \"../About/About\";\r\nimport Media from \"../Media/Media\";\r\nimport { FrontPageWrapper } from \"./FrontPage.styled\";\r\n\r\nconst FrontPage = () => (\r\n    <FrontPageWrapper>\r\n        <h1>Jesús Díaz Rivas</h1>\r\n        <About />\r\n        <Media />\r\n    </FrontPageWrapper>\r\n);\r\n\r\nexport default FrontPage;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n    body: \"#fff\",\r\n    fontColor: \"#000\",\r\n    switchWrapperColor: \"#000\",\r\n    switchBallColor: \"#fff\",\r\n    switchTranslate: \"150%\"\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: \"#0f171e\",\r\n    fontColor: \"#fff\",\r\n\r\n    switchWrapperColor: \"#fff\",\r\n    switchBallColor: \"#000\",\r\n};\r\ntype ThemeProviderProps = {\r\n    theme: {\r\n        body: string;\r\n        fontColor: string;\r\n        switchWrapperColor: string;\r\n        switchBallColor: string;\r\n        switchTranslate: string;\r\n    };\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle<ThemeProviderProps>`\r\n    \r\n\t#portfolio, body, ::-webkit-scrollbar-track,p,h1,nav, nav a, nav li, .mainSwiper > .swiper-button-next, .mainSwiper > .swiper-button-prev,#theme-switch, #ball {\r\n        background-color: ${({ theme }) => theme.body};\r\n        color: ${({ theme }) => theme.fontColor};\r\n\t}\r\n\r\n    #theme-switch{\r\n        background-color: ${({ theme }) => theme.switchWrapperColor};\r\n    }\r\n    #ball{\r\n        transform: translateX(${({ theme }) => (theme.switchTranslate)});\r\n    }\r\n    \r\n`;\r\n","import { useState } from \"react\";\r\n\r\nimport { Portfolio } from \"./components/Portfolio/Portfolio\";\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\n\r\nimport SwiperCore, { Autoplay, Pagination, Navigation } from \"swiper/core\";\r\n\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nimport { AppWrapper } from \"./App.styled\";\r\nimport FrontPage from \"./components/FrontPage/FrontPage\";\r\nimport { GlobalStyles } from \"./themes\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme } from \"src/themes\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Autoplay, Pagination, Navigation]);\r\n\r\nconst App: React.FC = () => {\r\n    const [theme, setTheme] = useState(\"dark\");\r\n\r\n    const [showNav, setShowNav] = useState(false);\r\n    const setThumbsSwiper = (e: any) => {\r\n        setShowNav(e.isEnd);\r\n        const mainArrowPrev = document.querySelector<HTMLElement>(\".swiper-button-prev\");\r\n        if (mainArrowPrev) {\r\n            mainArrowPrev.style.display = e.isEnd ? \"block\" : \"none\";\r\n        }\r\n        const mainArrowNext = document.querySelector<HTMLElement>(\".swiper-button-next\");\r\n        if (mainArrowNext) {\r\n            mainArrowNext.style.display = e.isEnd ? \"none\" : \"block\";\r\n        }\r\n    };\r\n    return (\r\n        <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n            <AppWrapper>\r\n                <GlobalStyles />\r\n                {<Navbar setTheme={setTheme} show={showNav} />}\r\n                <Swiper\r\n                \r\n                    loop={false}\r\n                    navigation={true}\r\n                    slidesPerColumnFill={0 ? \"row\" : undefined}\r\n                    slidesPerView={\"auto\"}\r\n                    autoHeight={true}\r\n                    className=\"mainSwiper\"\r\n                    onSlideChange={setThumbsSwiper}\r\n                    grabCursor={true}\r\n                    pagination={{\r\n                        clickable: true,\r\n                    }}\r\n                >\r\n                    <SwiperSlide className=\"front-component\">\r\n                        <FrontPage />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <Portfolio />\r\n                    </SwiperSlide>\r\n                </Swiper>\r\n            </AppWrapper>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./helpers/i18n\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Route path=\"/\" exact component={App} />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}